{
  "type": "File",
  "start": 0,
  "end": 1788,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 43,
      "column": 48
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 1788,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 43,
        "column": 48
      }
    },
    "sourceType": "module",
    "body": [],
    "directives": [],
    "leadingComments": null,
    "innerComments": [
      {
        "type": "CommentBlock",
        "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is a non-negative number, and the value for\nCellKind k is stored in array[k].\n@example\n* // V[0] is for the background, V[1] for the first real cellkind.\n* let V = [0,500] \n@typedef {number[]} PerKindNonNegative ",
        "start": 0,
        "end": 308,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 41
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is a number between 0 and 1, and the value for\nCellKind k is stored in array[k].\n@example\n* // PERSIST[0] is for the background, PERSIST[1] for the first real cellkind.\n* let PERSIST = [0,0.8] \n@typedef {number[]} PerKindProb ",
        "start": 310,
        "end": 632,
        "loc": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 34
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is an array of some length, and the array for\nCellKind k is stored in array[k].\n@example\n* let LAMBDA_ACT_MBG = [[0,0],[0,0],[800,100]]\n@typedef {number[]} PerKindArray ",
        "start": 634,
        "end": 899,
        "loc": {
          "start": {
            "line": 17,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 35
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is a boolean, and the value for\nCellKind k is stored in array[k].\n@example\n* // IS_BARRIER[0] is for the background; cellkind 1 is the \"barrier\" \n* // and 2 is a real cell.\n* let IS_BARRIER = [false,true,false] \n@typedef {number[]} PerKindBoolean ",
        "start": 901,
        "end": 1244,
        "loc": {
          "start": {
            "line": 24,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 37
          }
        }
      },
      {
        "type": "CommentBlock",
        "value": "* An array of arrays containing interaction parameter values for each {@link CellKind}-\ncombination. Each element in the array is a non-negative number, and \nX[n][m] contains the value for an interaction between cellkinds n and m. \n@example\n* // J[0][0] between two background pixels is always zero.\n* // Not that it matters, because the background has a \n* // single cellid of zero -- so there are no pairs\n* // of background pixels from different cells anyway.\n* let J = [[0,20],[20,10]] \n@typedef {number[]} CellKindInteractionMatrix ",
        "start": 1247,
        "end": 1788,
        "loc": {
          "start": {
            "line": 34,
            "column": 0
          },
          "end": {
            "line": 43,
            "column": 48
          }
        }
      }
    ]
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is a non-negative number, and the value for\nCellKind k is stored in array[k].\n@example\n* // V[0] is for the background, V[1] for the first real cellkind.\n* let V = [0,500] \n@typedef {number[]} PerKindNonNegative ",
      "start": 0,
      "end": 308,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 41
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is a number between 0 and 1, and the value for\nCellKind k is stored in array[k].\n@example\n* // PERSIST[0] is for the background, PERSIST[1] for the first real cellkind.\n* let PERSIST = [0,0.8] \n@typedef {number[]} PerKindProb ",
      "start": 310,
      "end": 632,
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 34
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is an array of some length, and the array for\nCellKind k is stored in array[k].\n@example\n* let LAMBDA_ACT_MBG = [[0,0],[0,0],[800,100]]\n@typedef {number[]} PerKindArray ",
      "start": 634,
      "end": 899,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 35
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is a boolean, and the value for\nCellKind k is stored in array[k].\n@example\n* // IS_BARRIER[0] is for the background; cellkind 1 is the \"barrier\" \n* // and 2 is a real cell.\n* let IS_BARRIER = [false,true,false] \n@typedef {number[]} PerKindBoolean ",
      "start": 901,
      "end": 1244,
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 31,
          "column": 37
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* An array of arrays containing interaction parameter values for each {@link CellKind}-\ncombination. Each element in the array is a non-negative number, and \nX[n][m] contains the value for an interaction between cellkinds n and m. \n@example\n* // J[0][0] between two background pixels is always zero.\n* // Not that it matters, because the background has a \n* // single cellid of zero -- so there are no pairs\n* // of background pixels from different cells anyway.\n* let J = [[0,20],[20,10]] \n@typedef {number[]} CellKindInteractionMatrix ",
      "start": 1247,
      "end": 1788,
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 43,
          "column": 48
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is a non-negative number, and the value for\nCellKind k is stored in array[k].\n@example\n* // V[0] is for the background, V[1] for the first real cellkind.\n* let V = [0,500] \n@typedef {number[]} PerKindNonNegative ",
      "start": 0,
      "end": 308,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 41
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is a number between 0 and 1, and the value for\nCellKind k is stored in array[k].\n@example\n* // PERSIST[0] is for the background, PERSIST[1] for the first real cellkind.\n* let PERSIST = [0,0.8] \n@typedef {number[]} PerKindProb ",
      "start": 310,
      "end": 632,
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 34
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is an array of some length, and the array for\nCellKind k is stored in array[k].\n@example\n* let LAMBDA_ACT_MBG = [[0,0],[0,0],[800,100]]\n@typedef {number[]} PerKindArray ",
      "start": 634,
      "end": 899,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 35
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* An array containing parameter values for each {@link CellKind}.\nEach element in the array is a boolean, and the value for\nCellKind k is stored in array[k].\n@example\n* // IS_BARRIER[0] is for the background; cellkind 1 is the \"barrier\" \n* // and 2 is a real cell.\n* let IS_BARRIER = [false,true,false] \n@typedef {number[]} PerKindBoolean ",
      "start": 901,
      "end": 1244,
      "loc": {
        "start": {
          "line": 24,
          "column": 0
        },
        "end": {
          "line": 31,
          "column": 37
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "* An array of arrays containing interaction parameter values for each {@link CellKind}-\ncombination. Each element in the array is a non-negative number, and \nX[n][m] contains the value for an interaction between cellkinds n and m. \n@example\n* // J[0][0] between two background pixels is always zero.\n* // Not that it matters, because the background has a \n* // single cellid of zero -- so there are no pairs\n* // of background pixels from different cells anyway.\n* let J = [[0,20],[20,10]] \n@typedef {number[]} CellKindInteractionMatrix ",
      "start": 1247,
      "end": 1788,
      "loc": {
        "start": {
          "line": 34,
          "column": 0
        },
        "end": {
          "line": 43,
          "column": 48
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1788,
      "end": 1788,
      "loc": {
        "start": {
          "line": 43,
          "column": 48
        },
        "end": {
          "line": 43,
          "column": 48
        }
      }
    }
  ]
}